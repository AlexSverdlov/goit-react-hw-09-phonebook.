{"version":3,"sources":["redux/auth/auth-selectors.js","conponents/Navigation.js","conponents/Authnav.js","conponents/UserMenu.js","conponents/AppBar.js","conponents/Container/Container.js","conponents/PrivateRoute.js","conponents/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-reduser.js","redux/store.js","index.js","redux/contacts/contacts-actions.js","redux/auth/auth-operations.js","redux/auth/auth-action.js"],"names":["state","auth","isAutheticated","user","email","styles","link","textDecoration","color","padding","activelink","Navigation","isLoggedIn","useSelector","authSelectors","Nav","defaultActiveKey","as","Item","exact","to","className","activeClassName","style","activeStyle","AuthNav","span","UserMenu","dispatch","useDispatch","onLogout","useCallback","authOperations","logout","Button","variant","type","size","onClick","Appbar","Navbar","bg","Container","children","PrivateRoute","Component","component","routeProps","isAuthentificated","render","props","PublicRoute","restricted","Homeview","lazy","LoginView","RegisterView","ContactsView","App","useEffect","getCurrentUser","fallback","path","itemsReduсer","createReducer","fetchContactSuccess","action","payload","addContactSuccess","delContactSuccess","filter","item","id","filterReduсer","filterContact","_","contactsReduсer","combineReducers","items","initialUserState","name","authActions","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","error","registerError","loginError","logoutError","getCurrentUserError","authReduser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","next","authPersistConfih","key","storage","whitelist","configureStore","reducer","persistReducer","authReduсer","contacts","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById","fetchContactRequest","createAction","fetchContactError","addContactRequest","addContactError","delContactRequest","delContactError","axios","defaults","baseURL","headers","common","Authorization","register","credential","registerRequest","post","then","data","catch","message","login","loginRequest","logoutRequest","getState","persistedToken","getCurrentUserRequest","get"],"mappings":"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","file":"static/js/main.913df667.chunk.js","sourcesContent":["const getIsAutentificated = state => state.auth.isAutheticated;\r\n\r\nconst getUserMail = state => state.auth.user.email;\r\n\r\nexport default {\r\n  getIsAutentificated,\r\n  getUserMail,\r\n};\r\n","//npm\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Nav from 'react-bootstrap/Nav';\r\n//module\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nconst styles = {\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'black',\r\n    padding: 10,\r\n  },\r\n  activelink: {\r\n    color: 'white',\r\n  },\r\n};\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAutentificated);\r\n\r\n  return (\r\n    <Nav defaultActiveKey=\"/home\" as=\"ul\">\r\n      <Nav.Item as=\"li\">\r\n        <NavLink\r\n          exact\r\n          to=\"/\"\r\n          className=\"NavLink\"\r\n          activeClassName=\"NavLink-active\"\r\n          style={styles.link}\r\n          activeStyle={styles.activelink}\r\n        >\r\n          Home\r\n        </NavLink>\r\n      </Nav.Item>\r\n      {isLoggedIn && (\r\n        <Nav.Item as=\"li\">\r\n          <NavLink\r\n            exact\r\n            to=\"/contacts\"\r\n            className=\"NavLink\"\r\n            activeClassName=\"NavLink-active\"\r\n            style={styles.link}\r\n            activeStyle={styles.activelink}\r\n          >\r\n            Контакты\r\n          </NavLink>\r\n        </Nav.Item>\r\n      )}\r\n    </Nav>\r\n  );\r\n}\r\n","//npm\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\nconst styles = {\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'black',\r\n    padding: 10,\r\n  },\r\n  activelink: {\r\n    color: 'white',\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <Nav>\r\n    <Nav.Item>\r\n      <NavLink\r\n        exact\r\n        to=\"/register\"\r\n        className=\"NavLink\"\r\n        activeClassName=\"NavLink-active\"\r\n        style={styles.link}\r\n        activeStyle={styles.activelink}\r\n      >\r\n        Регистрация\r\n      </NavLink>\r\n    </Nav.Item>\r\n    <Nav.Item>\r\n      <NavLink\r\n        exact\r\n        to=\"/login\"\r\n        className=\"NavLink\"\r\n        activeClassName=\"NavLink-active\"\r\n        style={styles.link}\r\n        activeStyle={styles.activelink}\r\n      >\r\n        Войти\r\n      </NavLink>\r\n    </Nav.Item>\r\n  </Nav>\r\n);\r\n\r\nexport default AuthNav;\r\n","//npm\r\nimport React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Button from 'react-bootstrap/Button';\r\n//module\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\nimport authOperations from '../redux/auth/auth-operations';\r\n\r\nconst styles = {\r\n  span: {\r\n    padding: 10,\r\n    color: 'white',\r\n  },\r\n};\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const email = useSelector(authSelectors.getUserMail);\r\n\r\n  const onLogout = useCallback(() => {\r\n    dispatch(authOperations.logout());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <span style={styles.span}>{email}</span>\r\n      <Button\r\n        variant=\"outline-light\"\r\n        type=\"button\"\r\n        size=\"sm\"\r\n        onClick={onLogout}\r\n      >\r\n        Выйти\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","//npm\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n//module\r\nimport Navigation from './Navigation';\r\nimport AuthNav from './Authnav';\r\nimport UserMenu from './UserMenu';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nexport default function Appbar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAutentificated);\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg=\"primary\" variant=\"dark\" className=\"justify-content-between\">\r\n        <Navigation />\r\n        {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n      </Navbar>\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst Container = ({ children }) => (\r\n  <section>\r\n    {children}\r\n    <hr />\r\n  </section>\r\n);\r\n\r\nexport default Container;\r\n","//npm\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n//module\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nexport default function PrivateRoute({ component: Component, ...routeProps }) {\r\n  const isAuthentificated = useSelector(authSelectors.getIsAutentificated);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuthentificated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","//npm\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n//module\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\nexport default function PublicRoute({ component: Component, ...routeProps }) {\r\n  const isAuthentificated = useSelector(authSelectors.getIsAutentificated);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={props =>\r\n        isAuthentificated && routeProps.restricted ? (\r\n          <Redirect to=\"/contacts\" />\r\n        ) : (\r\n          <Component {...props} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","//npm\nimport React, { Suspense, lazy, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n//css\nimport './App.css';\n//module\nimport Appbar from './conponents/AppBar';\nimport Container from './conponents/Container/Container';\nimport authOperations from './redux/auth/auth-operations';\nimport PrivateRoute from './conponents/PrivateRoute';\nimport PublicRoute from './conponents/PublicRoute';\n//lazy\nconst Homeview = lazy(() => import('./views/Homeview'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Appbar />\n      <Suspense fallback={<p>Загружаем...</p>}>\n        <Switch>\n          <Route exact path=\"/\" component={Homeview} />\n          <PublicRoute path=\"/login\" restricted component={LoginView} />\n          <PublicRoute path=\"/register\" restricted component={RegisterView} />\n          <PrivateRoute path=\"/contacts\" component={ContactsView} />\n        </Switch>\n      </Suspense>\n    </Container>\n  );\n}\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactSuccess,\r\n  addContactSuccess,\r\n  delContactSuccess,\r\n  filterContact,\r\n} from './contacts-actions';\r\n\r\nconst itemsReduсer = createReducer([], {\r\n  [fetchContactSuccess]: (state, action) => action.payload,\r\n  [addContactSuccess]: (state, action) => [action.payload, ...state],\r\n  [delContactSuccess]: (state, action) =>\r\n    state.filter(item => item.id !== action.payload),\r\n});\r\n\r\nconst filterReduсer = createReducer('', {\r\n  [filterContact]: (_, action) => action.payload,\r\n});\r\n\r\nconst contactsReduсer = combineReducers({\r\n  items: itemsReduсer,\r\n  filter: filterReduсer,\r\n});\r\n\r\nexport default contactsReduсer;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-action';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isAutheticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.logoutError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nconst authReduser = combineReducers({\r\n  user,\r\n  isAutheticated,\r\n  token,\r\n  error,\r\n});\r\n\r\nexport default authReduser;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactsReduсer from './contacts/contacts-reducer';\r\nimport authReduсer from './auth/auth-reduser';\r\n\r\nconst myMiddlware = store => next => action => {\r\n  // console.log('dasdadads', action);\r\n  next(action);\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  myMiddlware,\r\n];\r\n\r\nconst authPersistConfih = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfih, authReduсer),\r\n    contacts: contactsReduсer,\r\n  },\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","//npm\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n//css\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//module\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('APP/FETCH_CONTACT_REQUEST');\r\nexport const fetchContactSuccess = createAction('APP/FETCH_CONTACT_SUCCESS');\r\nexport const fetchContactError = createAction('APP/FETCH_CONTACT_ERROR');\r\n\r\nexport const addContactRequest = createAction('APP/ADD_CONTACT_REQUEST');\r\nexport const addContactSuccess = createAction('APP/ADD_CONTACT_SUCCESS');\r\nexport const addContactError = createAction('APP/ADD_CONTACT_ERROR');\r\n\r\nexport const delContactRequest = createAction('APP/DEL_CONTACT_REQUEST');\r\nexport const delContactSuccess = createAction('APP/DEL_CONTACT_SUCCESS');\r\nexport const delContactError = createAction('APP/DEL_CONTACT_ERROR');\r\n\r\nexport const filterContact = createAction('APP/FILTER_CONTACT');\r\n","import axios from 'axios';\r\nimport authActions from './auth-action';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = credential => dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n  axios\r\n    .post('/users/signup', credential)\r\n    .then(({ data }) => {\r\n      token.set(data.token);\r\n      dispatch(authActions.registerSuccess(data));\r\n    })\r\n    .catch(error => dispatch(authActions.registerError(error.message)));\r\n};\r\n\r\nconst login = credential => dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n  axios\r\n    .post('/users/login', credential)\r\n    .then(({ data }) => {\r\n      // console.log(data);\r\n      token.set(data.token);\r\n      dispatch(authActions.loginSuccess(data));\r\n    })\r\n    .catch(error => dispatch(authActions.loginError(error.message)));\r\n};\r\n\r\nconst logout = () => dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n  axios\r\n    .post('/users/logout')\r\n    .then(() => {\r\n      token.unset();\r\n      dispatch(authActions.logoutSuccess());\r\n    })\r\n    .catch(error => dispatch(authActions.logoutError(error.message)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  axios\r\n    .get('/users/current')\r\n    .then(({ data }) => {\r\n      dispatch(authActions.getCurrentUserSuccess(data));\r\n    })\r\n    .catch(error => dispatch(authActions.getCurrentUserError(error.message)));\r\n};\r\n\r\nexport default { register, login, logout, getCurrentUser };\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n"],"sourceRoot":""}