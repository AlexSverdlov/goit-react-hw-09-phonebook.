{"version":3,"sources":["redux/contacts/contacts-selectors.js","conponents/ContactForm.js","redux/contacts/contacts-operations.js","conponents/Filter.js","conponents/ContactList.view.js","conponents/ContactList.container.js","views/ContactsView.js"],"names":["getItems","state","contacts","items","getFilter","filter","visibleContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","id","uuidv4","props","find","item","toUpperCase","alert","onSubmit","Form","this","autoComplete","Group","Label","Control","type","onChange","Button","variant","React","Component","connect","contactSelectors","dispatch","actions","axios","post","then","data","catch","error","message","addContact","textFilter","controlId","ContactList","onDelete","ListGroup","map","Item","size","onClick","style","marginLeft","delete","ContactsView","fetchContact","marginTop","get"],"mappings":"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","file":"static/js/6.47eb647e.chunk.js","sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getItems = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst visibleContacts = createSelector(\r\n  [getFilter, getItems],\r\n  (filter, contacts) => {\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\n\r\nexport default {\r\n  getItems,\r\n  getFilter,\r\n  visibleContacts,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { addContact } from '../redux/contacts/contacts-operations';\r\nimport contactSelectors from '../redux/contacts/contacts-selectors';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n    if (\r\n      this.props.items.find(\r\n        item => item.name.toUpperCase() === this.state.name.toUpperCase(),\r\n      )\r\n    ) {\r\n      alert(this.state.name + ' is already in contacts');\r\n    } else {\r\n      this.props.onSubmit(contact);\r\n      this.setState({ name: '', number: '' });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n        <Form.Group>\r\n          <Form.Label>Имя</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label>Номер</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </Form.Group>\r\n        <Button variant=\"outline-primary\" type=\"submit\">\r\n          Добавить контакт\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  items: contactSelectors.getItems(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: item => dispatch(addContact(item)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import axios from 'axios';\r\nimport * as actions from './contacts-actions';\r\n\r\nexport const fetchContact = () => dispatch => {\r\n  dispatch(actions.fetchContactRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(actions.fetchContactSuccess(data)))\r\n    .catch(error => dispatch(actions.fetchContactError(error.message)));\r\n};\r\n\r\nexport const addContact = item => dispatch => {\r\n  dispatch(actions.addContactRequest());\r\n  axios\r\n    .post('/contacts', item)\r\n    .then(({ data }) => dispatch(actions.addContactSuccess(data)))\r\n    .catch(error => dispatch(actions.addContactError(error.message)));\r\n};\r\n\r\nexport const delContact = id => dispatch => {\r\n  dispatch(actions.delContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(actions.delContactSuccess(id)))\r\n    .catch(error => dispatch(actions.delContactError(error.message)));\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Form from 'react-bootstrap/Form';\r\nimport * as actions from '../redux/contacts/contacts-actions';\r\nimport contactSelectors from '../redux/contacts/contacts-selectors';\r\n\r\nconst Filter = ({ textFilter, onChange }) => (\r\n  <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n    <Form.Label>Найти контакт по имени</Form.Label>\r\n    <Form.Control\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={textFilter}\r\n      onChange={onChange}\r\n    />\r\n  </Form.Group>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  textFilter: contactSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(actions.filterContact(e.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  return (\r\n    <ListGroup>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ListGroup.Item key={id}>\r\n          {name}: {number}\r\n          <Button\r\n            variant=\"outline-primary\"\r\n            type=\"button\"\r\n            size=\"sm\"\r\n            onClick={() => onDelete(id)}\r\n            style={{ marginLeft: '20px' }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </ListGroup.Item>\r\n      ))}\r\n    </ListGroup>\r\n  );\r\n};\r\nexport default ContactList;\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../redux/contacts/contacts-operations';\r\nimport contactSelectors from '../redux/contacts/contacts-selectors';\r\nimport ContactList from './ContactList.view';\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactSelectors.visibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(actions.delContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactForm from '../conponents/ContactForm';\r\nimport Filter from '../conponents/Filter';\r\nimport ContactList from '../conponents/ContactList.container';\r\nimport { fetchContact } from '../redux/contacts/contacts-operations';\r\n\r\nclass ContactsView extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchContact();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>Страница контактов</h3>\r\n        <ContactForm />\r\n        <hr />\r\n        <h3 style={{ marginTop: '20px' }}>Контакты</h3>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContact: () => dispatch(fetchContact()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactsView);\r\n"],"sourceRoot":""}